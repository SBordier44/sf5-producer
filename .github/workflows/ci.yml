name: Tests
on: [ push ]
jobs:
  functional-tests:
    name: Functional tests
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: [ '8.0' ]
        node-version: [ '17.0' ]
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
          POSTGRES_USER: symfony
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: |
          cp .env.sample .env
          GOOGLE_MAP_API_KEY=${{ secrets.GOOGLE_MAP_API_KEY }} composer install
      - name: Install NPM dependencies
        run: |
          yarn install
          cp process.env.dist process.env
          GOOGLE_MAP_API_KEY=${{ secrets.GOOGLE_MAP_API_KEY }} yarn build
      - name: Prepare database
        env:
          DATABASE_URL: "postgresql://symfony:postgres@postgres:5432/app?serverVersion=13&charset=utf8"
        run: |
          php bin/console doctrine:database:create
          php bin/console doctrine:schema:update --force
          php bin/console doctrine:fixtures:load -n
      - name: Run functional tests
        env:
          DATABASE_URL: "postgresql://symfony:postgres@postgres:5432/app?serverVersion=13&charset=utf8"
        run: GOOGLE_MAP_API_KEY=${{ secrets.GOOGLE_MAP_API_KEY }} php vendor/bin/simple-phpunit
      - name: Analyze coding style
        run: php vendor/bin/phpcs
